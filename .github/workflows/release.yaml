name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+" # Only create releases on matching tags following semver X.Y.Z

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: Linux
            PYINSTALLER_ARGS: "--onefile --add-data 'data/song_list.json:data'"
          - os: macos-latest
            TARGET: macOS
            PYINSTALLER_ARGS: "--windowed --icon .github/media/usdb_syncer.icns --add-data 'data/song_list.json:data'"
          - os: windows-latest
            TARGET: Windows
            PYINSTALLER_ARGS: "--onefile --icon .github/media/usdb_syncer.ico --add-data 'data/song_list.json;data'"
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: "6.*"
          setup-python: false
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install '.[dev]'
      - name: Generate GUI elements
        run: generate_pyside_files
      - name: Scrape USDB song list to ship with the bundle
        run: generate_song_list_json -t 'data/song_list.json' -u '${{ secrets.USDB_USER }}' -p '${{ secrets.USDB_PASSWORD }}'
      - name: Build with pyinstaller for ${{matrix.os}}
        run: pyinstaller -n 'USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}' ${{matrix.PYINSTALLER_ARGS}} src/usdb_syncer/main.py
      - name: Archive application for upload
        if: matrix.TARGET == 'macOS'
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          directory: dist
          path: "USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}.app"
          filename: "USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}.zip"
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            dist/*
            !dist/*.app

  release:
    name: Create release
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*"
